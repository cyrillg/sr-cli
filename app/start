#!/usr/bin/env bash

#-----------------------------------------------------------------------------
ROOT_DIR="$(dirname "$(perl -e 'use Cwd "abs_path"; \
                                print abs_path(shift)' $0)")"
. "${ROOT_DIR}/../utils"

if [[ "$#" -gt "0" ]]; then
    print_err "Too many arguments"
    exit 1
fi

#-----------------------------------------------------------------------------
# Check for the existence of a container
RES_PS="$(docker ps -a --filter=name=sr-docker --format "{{.Status}}" 2>&1)"
if [[ "$?" != "0" ]]; then
    print_err "Issue running following command:"
    print_err "    docker ps -a --filter=name=sr-docker"
    print_err "                 --format \"{{.Status}}\""
    print_stdout "$RES_PS"
    exit 1
fi

if [[ -z "$RES_PS" ]]; then
    print_err "Container sr-docker is not created. Are you looking for:"
    print_err ""
    print_err "    sr-cli create"
    print_err ""
    exit 1
fi

#-----------------------------------------------------------------------------
# Start the sr-docker container
print_info "Starting sr-docker container..."
RES_START="$(docker start sr-docker 2>&1)"
if [[ "$?" != "0" ]]; then
    print_err "Could not start the sr-docker container, please ensure it is created:"
    print_err ""
    print_err "    sr-cli status"
    print_err ""
    print_stdout "$RES_START"
    exit 1
fi
print_ok "Container sr-docker started"

#-----------------------------------------------------------------------------
# Perform last setup
if [[ "$RES_PS" != "Created" ]]; then
    print_info "You can now connect to this sr-docker container with:"
    print_info ""
    print_info "    sr-cli connect"
    print_info ""

    exit 0
fi

print_info "First start - Hang on for last setups..."
sleep 5
RES_EXEC="$(docker exec -it sr-docker sh -c "chown -R serial:serial /home/serial" 2>&1)"
if [[ "$?" != "0" ]]; then
    print_err "Issue running following command:"
    print_err "    docker exec -it sr-docker sh -c \"chown -R serial:serial /home/serial\""
    print_stdout "$RES_EXEC"
    exit 1
fi
print_ok "Done"
print_info "You can now connect to this sr-docker container with:"
print_info ""
print_info "    sr-cli connect"
print_info ""

